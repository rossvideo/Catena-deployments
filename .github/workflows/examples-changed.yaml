name: The examples.json file has changed, do stuff

on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths:
      - '.github/workflows/examples-changed.yaml'
      - 'examples.json'

jobs:
  update-files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate README examples section
        shell: python
        run: |
          import json

          README_MD = "README.md"
          EXAMPLES_JSON = "examples.json"

          # load the examples data
          with open(EXAMPLES_JSON) as f:
              examples = json.load(f)
          # build the markdown content
          lines = []
          del examples["version"]
          for conn in examples:
              lines.append(f"### {conn}")
              for ex in sorted(examples[conn]):
                  lines.append(f"- {ex}")
          # read the existing README
          with open(README_MD) as f:
              readme = f.read()
          # replace the section between the markers
          start_marker = "<!-- EXAMPLES_START -->"
          end_marker = "<!-- EXAMPLES_END -->"
          start_idx = readme.index(start_marker) + len(start_marker)
          end_idx = readme.index(end_marker)
          new_readme = readme[:start_idx] + "\n" + "\n".join(lines) + "\n" + readme[end_idx:]
          # write back the updated README
          with open(README_MD, "w") as f:
              f.write(new_readme)

      - name: Update Helm Chart
        shell: python
        run: |
          import json
          import re

          CHART_YAML = "helmcharts/catena/Chart.yaml"
          EXAMPLES_JSON = "examples.json"

          with open(EXAMPLES_JSON) as f:
              examples = json.load(f)
          catena_version = examples["version"]
          print(f"Catena version from {EXAMPLES_JSON}: {catena_version}")
          with open(CHART_YAML) as f:
              chart_yaml = f.read()
          chart_yaml = re.sub(r"^version: .*$", f"version: {catena_version}", chart_yaml, flags=re.MULTILINE)
          chart_yaml = re.sub(r"^appVersion: .*$", f'appVersion: "{catena_version}"', chart_yaml, flags=re.MULTILINE)
          with open(CHART_YAML, "w") as f:
              f.write(chart_yaml)
          print(f"Updated {CHART_YAML} to version {catena_version}")

      - name: Commit and push changes
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_EMAIL"
          git add README.md
          git add helmcharts/catena/Chart.yaml
          git commit -m "Update files from examples.json changes"
          git push origin ${GITHUB_REF}
